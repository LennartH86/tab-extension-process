import * as React from 'react';
import { ElemAttrs } from '../../utils/NativeProps';
export interface BadgeProps extends Pick<React.AriaAttributes, 'aria-label' | 'aria-labelledby'> {
    'aria-label'?: string;
    'aria-labelledby'?: string;
    /**
     * The content of the badge.
     *
     * If the `numeric` is `true` this value should only contain numerical characters (`0-9` and `?#$%^*()-=+`).
     */
    children: React.ReactNode;
    /** Set to true when rendering on a dark background. This affects coloring of the Badge. */
    darkBackground?: boolean;
    /**
     * The color styling of the Badge to use.
     * @default ```'primary'```
     */
    kind?: 'primary' | 'secondary' | 'outline';
    /** Numeric badges have more rounded corners and might be used e.g. to display notification badges for unread messages. */
    numeric?: boolean;
}
/**
 * Badge is a static indicator that holds a small amount of information such as a condition, property, or some other metadata.
 *
 * All undocumented props will be passed to the root element.
 *
 * If a Badge is not surrounded by context-providing text, either `aria-label` or `aria-labelledby` must be provided for the element to be accessible.
 */
export declare const Badge: React.FC<BadgeProps & Omit<ElemAttrs, keyof BadgeProps>>;
