import * as React from 'react';
import { ElemAttrs } from '../../utils/NativeProps';
import { RequireLabel } from '../../utils/ReactHelpers';
import { ColorPalette } from './Palettes';
export declare type ColorGridProps = RequireLabel & {
    disabled?: boolean;
    /** Invoked when the user wishes to change the color. If the selection is considered valid, the `selectedColor` prop should be updated with this value. */
    onColorChange?: (color: string) => void;
    /**
     * The color palette to display for picking a color.
     * To provide a custom pallete, pass a two-dimensional array of color code strings, where inner arrays are columns and the outer array is rows.
     * @default ```'dark'```
     */
    palette?: 'dark' | 'light' | 'flows' | ColorPalette;
    /** Color from the palette that is currently selected, if any. Must be in hex `'#RRGGBB'` format. */
    selectedColor?: string;
};
export declare const ColorPalettes: {
    [key in 'dark' | 'light' | 'flows']: ColorPalette;
};
export declare class ColorGrid extends React.PureComponent<ColorGridProps & Omit<ElemAttrs, keyof ColorGridProps>> {
    private handleClick;
    private handleGridKeyDown;
    render(): React.ReactNode;
    private buildColorSwatches;
    static defaultProps: Pick<ColorGridProps, 'palette'>;
}
