import * as React from 'react';
export declare type RequireAria<K extends keyof React.AriaAttributes> = Required<Pick<React.AriaAttributes, K>>;
/** Requires that either `aria-label` or `aria-labelledby` is specified. */
export declare type RequireLabel = RequireAria<'aria-label'> | RequireAria<'aria-labelledby'>;
/** Marks certain properties of a type as explicitly-disallowed rather than just omitted. */
export declare type ProhibitPropsFrom<T, K extends keyof T> = Omit<T, K> & {
    [Property in keyof Pick<T, K>]: never;
};
export declare function assignRef<T>(ref: React.Ref<T> | undefined, value: T | null): void;
/** Identical to React.useEffect, except that it never runs on mount. */
export declare const useEffectExceptOnMount: typeof React.useEffect;
